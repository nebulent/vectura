<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
	version="EE-3.4.0" 
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xm="http://www.mulesoft.org/schema/mule/xml"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:jersey="http://www.mulesoft.org/schema/mule/jersey" 
	xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:spring-util="http://www.springframework.org/schema/util"
	xmlns:ss="http://www.springframework.org/schema/security"
	xmlns:mule-ss="http://www.mulesoft.org/schema/mule/spring-security"
	xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:amqp="http://www.mulesoft.org/schema/mule/amqp"
	xsi:schemaLocation=
		"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/jersey http://www.mulesoft.org/schema/mule/jersey/current/mule-jersey.xsd
		http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/3.4/mule-xml.xsd
		http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
		http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/3.4/mule-json.xsd
		http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/3.4/mule-spring-security.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
		http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
		http://www.mulesoft.org/schema/mule/amqp http://www.mulesoft.org/schema/mule/amqp/3.4/mule-amqp.xsd">

	<spring:beans>
		<spring:import resource="classpath:META-INF/spring/vectura-mule.xml" />
		
		<ss:authentication-manager id="vectura_authenticationManager" alias="authenticationManager">
			<ss:authentication-provider>
				<ss:user-service id="authService">
					<ss:user name="${http.basicauth.user}" password="${http.basicauth.password}" authorities="ROLE_ADMIN" />
				</ss:user-service>
			</ss:authentication-provider>
		</ss:authentication-manager>
	</spring:beans>
	
    <!-- ********************************************** Simple ObjectStore SETUP ************************************************************* -->
	
    <spring:bean id="simpleMemory_objectStore" class="org.mule.util.store.SimpleMemoryObjectStore" />
	                         
	<!-- ********************************************** GLOBAL THREAD POOL CONFIG ************************************************************* -->
	
	<configuration>
		<default-threading-profile maxThreadsActive="200" poolExhaustedAction="WAIT" threadWaitTimeout="10000"
								   maxBufferSize="1000" maxThreadsIdle="2"/>
		<default-receiver-threading-profile maxThreadsActive="200" poolExhaustedAction="WAIT" threadWaitTimeout="1000"
								   maxBufferSize="1000" maxThreadsIdle="2"/>
	</configuration>
 
 	<!-- ********************************************** AMQP SETUP ************************************************************* -->
	
	<!--amqp:connector name="amqpAutoAckConnector" host="${rabbitmq.host}" port="${rabbitmq.port}" 
		username="${rabbitmq.username}" password="${rabbitmq.password}" /-->
	
	<!-- ********************************************** SECURITY ************************************************************* -->

	<mule-ss:security-manager>
		<mule-ss:delegate-security-provider name="memory-provider" delegate-ref="vectura_authenticationManager" />
	</mule-ss:security-manager>
                                       
    <!-- ********************************************** JSON ************************************************************* -->
	
    <json:json-to-object-transformer name="json_jsonToAccountTransformer" returnClass="nebulent.schema.software.vectura._1.Account"/>
    <json:object-to-json-transformer name="json_accountToJsonTransformer" sourceClass="nebulent.schema.software.vectura._1.Account"/>
    
	<!-- ********************************************** FLOWS ************************************************************* -->
	
	<byte-array-to-string-transformer name="byteArrayToString" />
	
	<flow name="nebulentVecturaAdminRestListener">
        <http:inbound-endpoint address="http://0.0.0.0:${http.port}/api/admin" exchange-pattern="request-response" doc:name="HTTP Admin Listener (REST)">
        	<mule-ss:http-security-filter realm="Please enter username and password to authenticate." securityProviders="memory-provider" />
        </http:inbound-endpoint>
        <jersey:resources doc:name="REST">
        	<component>
				<spring-object bean="adminService" />
			</component>
        </jersey:resources>
    </flow>
       
	<flow name="nebulentVecturaRestListener">
        <http:inbound-endpoint address="http://0.0.0.0:${http.port}/api" exchange-pattern="request-response" doc:name="HTTP Listener (REST)">
        	<custom-security-filter class="com.nebulent.vectura.web.security.mule.SignedRequestProcessingFilter">
        		<spring:property name="authenticationService" ref="authenticationService"/>
        	</custom-security-filter>
        </http:inbound-endpoint>
        
        <jersey:resources doc:name="REST">
        	<component>
				<spring-object bean="vecturaService" />
			</component>
        </jersey:resources>
    </flow>
</mule>